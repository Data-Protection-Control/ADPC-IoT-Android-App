// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pilot_policy.proto

package fr.citi_lab.victor_morel.coiot;

public final class PilotPolicyProto {
  private PilotPolicyProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface PilotPolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.PilotPolicy)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    java.util.List<PilotPolicy.PilotRule>
        getPilotRuleList();
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule getPilotRule(int index);
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    int getPilotRuleCount();
  }
  /**
   * <pre>
   * [START messages]
   * </pre>
   *
   * Protobuf type {@code tutorial.PilotPolicy}
   */
  public  static final class PilotPolicy extends
      com.google.protobuf.GeneratedMessageLite<
          PilotPolicy, PilotPolicy.Builder> implements
      // @@protoc_insertion_point(message_implements:tutorial.PilotPolicy)
      PilotPolicyOrBuilder {
    private PilotPolicy() {
      pilotRule_ = emptyProtobufList();
    }
    public interface PilotRuleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tutorial.PilotPolicy.PilotRule)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required string datatype = 1;</code>
       */
      boolean hasDatatype();
      /**
       * <code>required string datatype = 1;</code>
       */
      String getDatatype();
      /**
       * <code>required string datatype = 1;</code>
       */
      com.google.protobuf.ByteString
          getDatatypeBytes();

      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      java.util.List<PilotRule.DCR>
          getDcrList();
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR getDcr(int index);
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      int getDcrCount();

      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      java.util.List<PilotRule.DCR>
          getTrList();
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR getTr(int index);
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      int getTrCount();
    }
    /**
     * Protobuf type {@code tutorial.PilotPolicy.PilotRule}
     */
    public  static final class PilotRule extends
        com.google.protobuf.GeneratedMessageLite<
            PilotRule, PilotRule.Builder> implements
        // @@protoc_insertion_point(message_implements:tutorial.PilotPolicy.PilotRule)
        PilotRuleOrBuilder {
      private PilotRule() {
        datatype_ = "";
        dcr_ = emptyProtobufList();
        tr_ = emptyProtobufList();
      }
      public interface DCROrBuilder extends
          // @@protoc_insertion_point(interface_extends:tutorial.PilotPolicy.PilotRule.DCR)
          com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        java.util.List<DCR.Condition>
            getConditionList();
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition getCondition(int index);
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        int getConditionCount();

        /**
         * <code>required string entity = 2;</code>
         */
        boolean hasEntity();
        /**
         * <code>required string entity = 2;</code>
         */
        String getEntity();
        /**
         * <code>required string entity = 2;</code>
         */
        com.google.protobuf.ByteString
            getEntityBytes();

        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        java.util.List<DCR.DUR>
            getDurList();
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR getDur(int index);
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        int getDurCount();
      }
      /**
       * Protobuf type {@code tutorial.PilotPolicy.PilotRule.DCR}
       */
      public  static final class DCR extends
          com.google.protobuf.GeneratedMessageLite<
              DCR, DCR.Builder> implements
          // @@protoc_insertion_point(message_implements:tutorial.PilotPolicy.PilotRule.DCR)
          DCROrBuilder {
        private DCR() {
          condition_ = emptyProtobufList();
          entity_ = "";
          dur_ = emptyProtobufList();
        }
        public interface ConditionOrBuilder extends
            // @@protoc_insertion_point(interface_extends:tutorial.PilotPolicy.PilotRule.DCR.Condition)
            com.google.protobuf.MessageLiteOrBuilder {

          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          java.util.List<Condition.Context>
              getContextList();
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context getContext(int index);
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          int getContextCount();
        }
        /**
         * Protobuf type {@code tutorial.PilotPolicy.PilotRule.DCR.Condition}
         */
        public  static final class Condition extends
            com.google.protobuf.GeneratedMessageLite<
                Condition, Condition.Builder> implements
            // @@protoc_insertion_point(message_implements:tutorial.PilotPolicy.PilotRule.DCR.Condition)
            ConditionOrBuilder {
          private Condition() {
            context_ = emptyProtobufList();
          }
          public interface ContextOrBuilder extends
              // @@protoc_insertion_point(interface_extends:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context)
              com.google.protobuf.MessageLiteOrBuilder {

            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            java.util.List<Context.Space>
                getSpaceList();
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space getSpace(int index);
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            int getSpaceCount();

            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            java.util.List<Context.Time>
                getTimeList();
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time getTime(int index);
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            int getTimeCount();
          }
          /**
           * Protobuf type {@code tutorial.PilotPolicy.PilotRule.DCR.Condition.Context}
           */
          public  static final class Context extends
              com.google.protobuf.GeneratedMessageLite<
                  Context, Context.Builder> implements
              // @@protoc_insertion_point(message_implements:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context)
              ContextOrBuilder {
            private Context() {
              space_ = emptyProtobufList();
              time_ = emptyProtobufList();
            }
            public interface SpaceOrBuilder extends
                // @@protoc_insertion_point(interface_extends:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space)
                com.google.protobuf.MessageLiteOrBuilder {

              /**
               * <code>required int32 lat = 1;</code>
               */
              boolean hasLat();
              /**
               * <code>required int32 lat = 1;</code>
               */
              int getLat();

              /**
               * <code>required int32 lon = 2;</code>
               */
              boolean hasLon();
              /**
               * <code>required int32 lon = 2;</code>
               */
              int getLon();

              /**
               * <code>required int32 range = 3;</code>
               */
              boolean hasRange();
              /**
               * <code>required int32 range = 3;</code>
               */
              int getRange();
            }
            /**
             * Protobuf type {@code tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space}
             */
            public  static final class Space extends
                com.google.protobuf.GeneratedMessageLite<
                    Space, Space.Builder> implements
                // @@protoc_insertion_point(message_implements:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space)
                SpaceOrBuilder {
              private Space() {
              }
              private int bitField0_;
              public static final int LAT_FIELD_NUMBER = 1;
              private int lat_;
              /**
               * <code>required int32 lat = 1;</code>
               */
              public boolean hasLat() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
              }
              /**
               * <code>required int32 lat = 1;</code>
               */
              public int getLat() {
                return lat_;
              }
              /**
               * <code>required int32 lat = 1;</code>
               */
              private void setLat(int value) {
                bitField0_ |= 0x00000001;
                lat_ = value;
              }
              /**
               * <code>required int32 lat = 1;</code>
               */
              private void clearLat() {
                bitField0_ = (bitField0_ & ~0x00000001);
                lat_ = 0;
              }

              public static final int LON_FIELD_NUMBER = 2;
              private int lon_;
              /**
               * <code>required int32 lon = 2;</code>
               */
              public boolean hasLon() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
              }
              /**
               * <code>required int32 lon = 2;</code>
               */
              public int getLon() {
                return lon_;
              }
              /**
               * <code>required int32 lon = 2;</code>
               */
              private void setLon(int value) {
                bitField0_ |= 0x00000002;
                lon_ = value;
              }
              /**
               * <code>required int32 lon = 2;</code>
               */
              private void clearLon() {
                bitField0_ = (bitField0_ & ~0x00000002);
                lon_ = 0;
              }

              public static final int RANGE_FIELD_NUMBER = 3;
              private int range_;
              /**
               * <code>required int32 range = 3;</code>
               */
              public boolean hasRange() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
              }
              /**
               * <code>required int32 range = 3;</code>
               */
              public int getRange() {
                return range_;
              }
              /**
               * <code>required int32 range = 3;</code>
               */
              private void setRange(int value) {
                bitField0_ |= 0x00000004;
                range_ = value;
              }
              /**
               * <code>required int32 range = 3;</code>
               */
              private void clearRange() {
                bitField0_ = (bitField0_ & ~0x00000004);
                range_ = 0;
              }

              public void writeTo(com.google.protobuf.CodedOutputStream output)
                                  throws java.io.IOException {
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  output.writeInt32(1, lat_);
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  output.writeInt32(2, lon_);
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  output.writeInt32(3, range_);
                }
                unknownFields.writeTo(output);
              }

              public int getSerializedSize() {
                int size = memoizedSerializedSize;
                if (size != -1) return size;

                size = 0;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  size += com.google.protobuf.CodedOutputStream
                    .computeInt32Size(1, lat_);
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  size += com.google.protobuf.CodedOutputStream
                    .computeInt32Size(2, lon_);
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  size += com.google.protobuf.CodedOutputStream
                    .computeInt32Size(3, range_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSerializedSize = size;
                return size;
              }

              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space parseFrom(
                  com.google.protobuf.ByteString data)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space parseFrom(
                  com.google.protobuf.ByteString data,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space parseFrom(byte[] data)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space parseFrom(
                  byte[] data,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space parseFrom(java.io.InputStream input)
                  throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space parseFrom(
                  java.io.InputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space parseDelimitedFrom(java.io.InputStream input)
                  throws java.io.IOException {
                return parseDelimitedFrom(DEFAULT_INSTANCE, input);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space parseDelimitedFrom(
                  java.io.InputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws java.io.IOException {
                return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space parseFrom(
                  com.google.protobuf.CodedInputStream input)
                  throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space parseFrom(
                  com.google.protobuf.CodedInputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
              }

              public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
              }
              public static Builder newBuilder(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
              }

              /**
               * Protobuf type {@code tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space}
               */
              public static final class Builder extends
                  com.google.protobuf.GeneratedMessageLite.Builder<
                    Space, Builder> implements
                  // @@protoc_insertion_point(builder_implements:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space)
                  fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.SpaceOrBuilder {
                // Construct using fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space.newBuilder()
                private Builder() {
                  super(DEFAULT_INSTANCE);
                }


                /**
                 * <code>required int32 lat = 1;</code>
                 */
                public boolean hasLat() {
                  return instance.hasLat();
                }
                /**
                 * <code>required int32 lat = 1;</code>
                 */
                public int getLat() {
                  return instance.getLat();
                }
                /**
                 * <code>required int32 lat = 1;</code>
                 */
                public Builder setLat(int value) {
                  copyOnWrite();
                  instance.setLat(value);
                  return this;
                }
                /**
                 * <code>required int32 lat = 1;</code>
                 */
                public Builder clearLat() {
                  copyOnWrite();
                  instance.clearLat();
                  return this;
                }

                /**
                 * <code>required int32 lon = 2;</code>
                 */
                public boolean hasLon() {
                  return instance.hasLon();
                }
                /**
                 * <code>required int32 lon = 2;</code>
                 */
                public int getLon() {
                  return instance.getLon();
                }
                /**
                 * <code>required int32 lon = 2;</code>
                 */
                public Builder setLon(int value) {
                  copyOnWrite();
                  instance.setLon(value);
                  return this;
                }
                /**
                 * <code>required int32 lon = 2;</code>
                 */
                public Builder clearLon() {
                  copyOnWrite();
                  instance.clearLon();
                  return this;
                }

                /**
                 * <code>required int32 range = 3;</code>
                 */
                public boolean hasRange() {
                  return instance.hasRange();
                }
                /**
                 * <code>required int32 range = 3;</code>
                 */
                public int getRange() {
                  return instance.getRange();
                }
                /**
                 * <code>required int32 range = 3;</code>
                 */
                public Builder setRange(int value) {
                  copyOnWrite();
                  instance.setRange(value);
                  return this;
                }
                /**
                 * <code>required int32 range = 3;</code>
                 */
                public Builder clearRange() {
                  copyOnWrite();
                  instance.clearRange();
                  return this;
                }

                // @@protoc_insertion_point(builder_scope:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space)
              }
              private byte memoizedIsInitialized = -1;
              protected final Object dynamicMethod(
                  MethodToInvoke method,
                  Object arg0, Object arg1) {
                switch (method) {
                  case NEW_MUTABLE_INSTANCE: {
                    return new fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space();
                  }
                  case IS_INITIALIZED: {
                    byte isInitialized = memoizedIsInitialized;
                    if (isInitialized == 1) return DEFAULT_INSTANCE;
                    if (isInitialized == 0) return null;

                    boolean shouldMemoize = ((Boolean) arg0).booleanValue();
                    if (!hasLat()) {
                      if (shouldMemoize) {
                        memoizedIsInitialized = 0;
                      }
                      return null;
                    }
                    if (!hasLon()) {
                      if (shouldMemoize) {
                        memoizedIsInitialized = 0;
                      }
                      return null;
                    }
                    if (!hasRange()) {
                      if (shouldMemoize) {
                        memoizedIsInitialized = 0;
                      }
                      return null;
                    }
                    if (shouldMemoize) memoizedIsInitialized = 1;
                    return DEFAULT_INSTANCE;

                  }
                  case MAKE_IMMUTABLE: {
                    return null;
                  }
                  case NEW_BUILDER: {
                    return new Builder();
                  }
                  case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space other = (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space) arg1;
                    lat_ = visitor.visitInt(
                        hasLat(), lat_,
                        other.hasLat(), other.lat_);
                    lon_ = visitor.visitInt(
                        hasLon(), lon_,
                        other.hasLon(), other.lon_);
                    range_ = visitor.visitInt(
                        hasRange(), range_,
                        other.hasRange(), other.range_);
                    if (visitor == MergeFromVisitor
                        .INSTANCE) {
                      bitField0_ |= other.bitField0_;
                    }
                    return this;
                  }
                  case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                        (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                        (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                      boolean done = false;
                      while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                          case 0:
                            done = true;
                            break;
                          default: {
                            if (!parseUnknownField(tag, input)) {
                              done = true;
                            }
                            break;
                          }
                          case 8: {
                            bitField0_ |= 0x00000001;
                            lat_ = input.readInt32();
                            break;
                          }
                          case 16: {
                            bitField0_ |= 0x00000002;
                            lon_ = input.readInt32();
                            break;
                          }
                          case 24: {
                            bitField0_ |= 0x00000004;
                            range_ = input.readInt32();
                            break;
                          }
                        }
                      }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                      throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                      throw new RuntimeException(
                          new com.google.protobuf.InvalidProtocolBufferException(
                              e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                  }
                  case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                  }
                  case GET_PARSER: {
                    if (PARSER == null) {    synchronized (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space.class) {
                        if (PARSER == null) {
                          PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                      }
                    }
                    return PARSER;
                  }
                }
                throw new UnsupportedOperationException();
              }


              // @@protoc_insertion_point(class_scope:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space)
              private static final fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space DEFAULT_INSTANCE;
              static {
                DEFAULT_INSTANCE = new Space();
                DEFAULT_INSTANCE.makeImmutable();
              }

              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space getDefaultInstance() {
                return DEFAULT_INSTANCE;
              }

              private static volatile com.google.protobuf.Parser<Space> PARSER;

              public static com.google.protobuf.Parser<Space> parser() {
                return DEFAULT_INSTANCE.getParserForType();
              }
            }

            public interface TimeOrBuilder extends
                // @@protoc_insertion_point(interface_extends:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time)
                com.google.protobuf.MessageLiteOrBuilder {

              /**
               * <code>required int32 start = 1;</code>
               */
              boolean hasStart();
              /**
               * <code>required int32 start = 1;</code>
               */
              int getStart();

              /**
               * <code>required int32 end = 2;</code>
               */
              boolean hasEnd();
              /**
               * <code>required int32 end = 2;</code>
               */
              int getEnd();
            }
            /**
             * Protobuf type {@code tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time}
             */
            public  static final class Time extends
                com.google.protobuf.GeneratedMessageLite<
                    Time, Time.Builder> implements
                // @@protoc_insertion_point(message_implements:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time)
                TimeOrBuilder {
              private Time() {
              }
              private int bitField0_;
              public static final int START_FIELD_NUMBER = 1;
              private int start_;
              /**
               * <code>required int32 start = 1;</code>
               */
              public boolean hasStart() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
              }
              /**
               * <code>required int32 start = 1;</code>
               */
              public int getStart() {
                return start_;
              }
              /**
               * <code>required int32 start = 1;</code>
               */
              private void setStart(int value) {
                bitField0_ |= 0x00000001;
                start_ = value;
              }
              /**
               * <code>required int32 start = 1;</code>
               */
              private void clearStart() {
                bitField0_ = (bitField0_ & ~0x00000001);
                start_ = 0;
              }

              public static final int END_FIELD_NUMBER = 2;
              private int end_;
              /**
               * <code>required int32 end = 2;</code>
               */
              public boolean hasEnd() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
              }
              /**
               * <code>required int32 end = 2;</code>
               */
              public int getEnd() {
                return end_;
              }
              /**
               * <code>required int32 end = 2;</code>
               */
              private void setEnd(int value) {
                bitField0_ |= 0x00000002;
                end_ = value;
              }
              /**
               * <code>required int32 end = 2;</code>
               */
              private void clearEnd() {
                bitField0_ = (bitField0_ & ~0x00000002);
                end_ = 0;
              }

              public void writeTo(com.google.protobuf.CodedOutputStream output)
                                  throws java.io.IOException {
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  output.writeInt32(1, start_);
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  output.writeInt32(2, end_);
                }
                unknownFields.writeTo(output);
              }

              public int getSerializedSize() {
                int size = memoizedSerializedSize;
                if (size != -1) return size;

                size = 0;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  size += com.google.protobuf.CodedOutputStream
                    .computeInt32Size(1, start_);
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  size += com.google.protobuf.CodedOutputStream
                    .computeInt32Size(2, end_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSerializedSize = size;
                return size;
              }

              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time parseFrom(
                  com.google.protobuf.ByteString data)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time parseFrom(
                  com.google.protobuf.ByteString data,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time parseFrom(byte[] data)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time parseFrom(
                  byte[] data,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws com.google.protobuf.InvalidProtocolBufferException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time parseFrom(java.io.InputStream input)
                  throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time parseFrom(
                  java.io.InputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time parseDelimitedFrom(java.io.InputStream input)
                  throws java.io.IOException {
                return parseDelimitedFrom(DEFAULT_INSTANCE, input);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time parseDelimitedFrom(
                  java.io.InputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws java.io.IOException {
                return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time parseFrom(
                  com.google.protobuf.CodedInputStream input)
                  throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
              }
              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time parseFrom(
                  com.google.protobuf.CodedInputStream input,
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                  throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
              }

              public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
              }
              public static Builder newBuilder(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
              }

              /**
               * Protobuf type {@code tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time}
               */
              public static final class Builder extends
                  com.google.protobuf.GeneratedMessageLite.Builder<
                    Time, Builder> implements
                  // @@protoc_insertion_point(builder_implements:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time)
                  fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.TimeOrBuilder {
                // Construct using fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time.newBuilder()
                private Builder() {
                  super(DEFAULT_INSTANCE);
                }


                /**
                 * <code>required int32 start = 1;</code>
                 */
                public boolean hasStart() {
                  return instance.hasStart();
                }
                /**
                 * <code>required int32 start = 1;</code>
                 */
                public int getStart() {
                  return instance.getStart();
                }
                /**
                 * <code>required int32 start = 1;</code>
                 */
                public Builder setStart(int value) {
                  copyOnWrite();
                  instance.setStart(value);
                  return this;
                }
                /**
                 * <code>required int32 start = 1;</code>
                 */
                public Builder clearStart() {
                  copyOnWrite();
                  instance.clearStart();
                  return this;
                }

                /**
                 * <code>required int32 end = 2;</code>
                 */
                public boolean hasEnd() {
                  return instance.hasEnd();
                }
                /**
                 * <code>required int32 end = 2;</code>
                 */
                public int getEnd() {
                  return instance.getEnd();
                }
                /**
                 * <code>required int32 end = 2;</code>
                 */
                public Builder setEnd(int value) {
                  copyOnWrite();
                  instance.setEnd(value);
                  return this;
                }
                /**
                 * <code>required int32 end = 2;</code>
                 */
                public Builder clearEnd() {
                  copyOnWrite();
                  instance.clearEnd();
                  return this;
                }

                // @@protoc_insertion_point(builder_scope:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time)
              }
              private byte memoizedIsInitialized = -1;
              protected final Object dynamicMethod(
                  MethodToInvoke method,
                  Object arg0, Object arg1) {
                switch (method) {
                  case NEW_MUTABLE_INSTANCE: {
                    return new fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time();
                  }
                  case IS_INITIALIZED: {
                    byte isInitialized = memoizedIsInitialized;
                    if (isInitialized == 1) return DEFAULT_INSTANCE;
                    if (isInitialized == 0) return null;

                    boolean shouldMemoize = ((Boolean) arg0).booleanValue();
                    if (!hasStart()) {
                      if (shouldMemoize) {
                        memoizedIsInitialized = 0;
                      }
                      return null;
                    }
                    if (!hasEnd()) {
                      if (shouldMemoize) {
                        memoizedIsInitialized = 0;
                      }
                      return null;
                    }
                    if (shouldMemoize) memoizedIsInitialized = 1;
                    return DEFAULT_INSTANCE;

                  }
                  case MAKE_IMMUTABLE: {
                    return null;
                  }
                  case NEW_BUILDER: {
                    return new Builder();
                  }
                  case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time other = (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time) arg1;
                    start_ = visitor.visitInt(
                        hasStart(), start_,
                        other.hasStart(), other.start_);
                    end_ = visitor.visitInt(
                        hasEnd(), end_,
                        other.hasEnd(), other.end_);
                    if (visitor == MergeFromVisitor
                        .INSTANCE) {
                      bitField0_ |= other.bitField0_;
                    }
                    return this;
                  }
                  case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                        (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                        (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                      boolean done = false;
                      while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                          case 0:
                            done = true;
                            break;
                          default: {
                            if (!parseUnknownField(tag, input)) {
                              done = true;
                            }
                            break;
                          }
                          case 8: {
                            bitField0_ |= 0x00000001;
                            start_ = input.readInt32();
                            break;
                          }
                          case 16: {
                            bitField0_ |= 0x00000002;
                            end_ = input.readInt32();
                            break;
                          }
                        }
                      }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                      throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                      throw new RuntimeException(
                          new com.google.protobuf.InvalidProtocolBufferException(
                              e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                  }
                  case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                  }
                  case GET_PARSER: {
                    if (PARSER == null) {    synchronized (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time.class) {
                        if (PARSER == null) {
                          PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                      }
                    }
                    return PARSER;
                  }
                }
                throw new UnsupportedOperationException();
              }


              // @@protoc_insertion_point(class_scope:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time)
              private static final fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time DEFAULT_INSTANCE;
              static {
                DEFAULT_INSTANCE = new Time();
                DEFAULT_INSTANCE.makeImmutable();
              }

              public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time getDefaultInstance() {
                return DEFAULT_INSTANCE;
              }

              private static volatile com.google.protobuf.Parser<Time> PARSER;

              public static com.google.protobuf.Parser<Time> parser() {
                return DEFAULT_INSTANCE.getParserForType();
              }
            }

            public static final int SPACE_FIELD_NUMBER = 1;
            private com.google.protobuf.Internal.ProtobufList<Space> space_;
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            public java.util.List<Space> getSpaceList() {
              return space_;
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            public java.util.List<? extends SpaceOrBuilder>
                getSpaceOrBuilderList() {
              return space_;
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            public int getSpaceCount() {
              return space_.size();
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space getSpace(int index) {
              return space_.get(index);
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.SpaceOrBuilder getSpaceOrBuilder(
                int index) {
              return space_.get(index);
            }
            private void ensureSpaceIsMutable() {
              if (!space_.isModifiable()) {
                space_ =
                    com.google.protobuf.GeneratedMessageLite.mutableCopy(space_);
               }
            }

            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            private void setSpace(
                int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space value) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureSpaceIsMutable();
              space_.set(index, value);
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            private void setSpace(
                int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space.Builder builderForValue) {
              ensureSpaceIsMutable();
              space_.set(index, builderForValue.build());
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            private void addSpace(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space value) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureSpaceIsMutable();
              space_.add(value);
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            private void addSpace(
                int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space value) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureSpaceIsMutable();
              space_.add(index, value);
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            private void addSpace(
                fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space.Builder builderForValue) {
              ensureSpaceIsMutable();
              space_.add(builderForValue.build());
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            private void addSpace(
                int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space.Builder builderForValue) {
              ensureSpaceIsMutable();
              space_.add(index, builderForValue.build());
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            private void addAllSpace(
                Iterable<? extends Space> values) {
              ensureSpaceIsMutable();
              com.google.protobuf.AbstractMessageLite.addAll(
                  values, space_);
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            private void clearSpace() {
              space_ = emptyProtobufList();
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
             */
            private void removeSpace(int index) {
              ensureSpaceIsMutable();
              space_.remove(index);
            }

            public static final int TIME_FIELD_NUMBER = 2;
            private com.google.protobuf.Internal.ProtobufList<Time> time_;
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            public java.util.List<Time> getTimeList() {
              return time_;
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            public java.util.List<? extends TimeOrBuilder>
                getTimeOrBuilderList() {
              return time_;
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            public int getTimeCount() {
              return time_.size();
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time getTime(int index) {
              return time_.get(index);
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.TimeOrBuilder getTimeOrBuilder(
                int index) {
              return time_.get(index);
            }
            private void ensureTimeIsMutable() {
              if (!time_.isModifiable()) {
                time_ =
                    com.google.protobuf.GeneratedMessageLite.mutableCopy(time_);
               }
            }

            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            private void setTime(
                int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time value) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTimeIsMutable();
              time_.set(index, value);
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            private void setTime(
                int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time.Builder builderForValue) {
              ensureTimeIsMutable();
              time_.set(index, builderForValue.build());
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            private void addTime(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time value) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTimeIsMutable();
              time_.add(value);
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            private void addTime(
                int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time value) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTimeIsMutable();
              time_.add(index, value);
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            private void addTime(
                fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time.Builder builderForValue) {
              ensureTimeIsMutable();
              time_.add(builderForValue.build());
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            private void addTime(
                int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time.Builder builderForValue) {
              ensureTimeIsMutable();
              time_.add(index, builderForValue.build());
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            private void addAllTime(
                Iterable<? extends Time> values) {
              ensureTimeIsMutable();
              com.google.protobuf.AbstractMessageLite.addAll(
                  values, time_);
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            private void clearTime() {
              time_ = emptyProtobufList();
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
             */
            private void removeTime(int index) {
              ensureTimeIsMutable();
              time_.remove(index);
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                                throws java.io.IOException {
              for (int i = 0; i < space_.size(); i++) {
                output.writeMessage(1, space_.get(i));
              }
              for (int i = 0; i < time_.size(); i++) {
                output.writeMessage(2, time_.get(i));
              }
              unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
              int size = memoizedSerializedSize;
              if (size != -1) return size;

              size = 0;
              for (int i = 0; i < space_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                  .computeMessageSize(1, space_.get(i));
              }
              for (int i = 0; i < time_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                  .computeMessageSize(2, time_.get(i));
              }
              size += unknownFields.getSerializedSize();
              memoizedSerializedSize = size;
              return size;
            }

            public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return com.google.protobuf.GeneratedMessageLite.parseFrom(
                  DEFAULT_INSTANCE, data);
            }
            public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return com.google.protobuf.GeneratedMessageLite.parseFrom(
                  DEFAULT_INSTANCE, data, extensionRegistry);
            }
            public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return com.google.protobuf.GeneratedMessageLite.parseFrom(
                  DEFAULT_INSTANCE, data);
            }
            public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return com.google.protobuf.GeneratedMessageLite.parseFrom(
                  DEFAULT_INSTANCE, data, extensionRegistry);
            }
            public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context parseFrom(java.io.InputStream input)
                throws java.io.IOException {
              return com.google.protobuf.GeneratedMessageLite.parseFrom(
                  DEFAULT_INSTANCE, input);
            }
            public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              return com.google.protobuf.GeneratedMessageLite.parseFrom(
                  DEFAULT_INSTANCE, input, extensionRegistry);
            }
            public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
              return parseDelimitedFrom(DEFAULT_INSTANCE, input);
            }
            public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
            }
            public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
              return com.google.protobuf.GeneratedMessageLite.parseFrom(
                  DEFAULT_INSTANCE, input);
            }
            public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              return com.google.protobuf.GeneratedMessageLite.parseFrom(
                  DEFAULT_INSTANCE, input, extensionRegistry);
            }

            public static Builder newBuilder() {
              return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context prototype) {
              return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }

            /**
             * Protobuf type {@code tutorial.PilotPolicy.PilotRule.DCR.Condition.Context}
             */
            public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                  Context, Builder> implements
                // @@protoc_insertion_point(builder_implements:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context)
                fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.ContextOrBuilder {
              // Construct using fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.newBuilder()
              private Builder() {
                super(DEFAULT_INSTANCE);
              }


              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
               */
              public java.util.List<Space> getSpaceList() {
                return java.util.Collections.unmodifiableList(
                    instance.getSpaceList());
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
               */
              public int getSpaceCount() {
                return instance.getSpaceCount();
              }/**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
               */
              public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space getSpace(int index) {
                return instance.getSpace(index);
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
               */
              public Builder setSpace(
                  int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space value) {
                copyOnWrite();
                instance.setSpace(index, value);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
               */
              public Builder setSpace(
                  int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space.Builder builderForValue) {
                copyOnWrite();
                instance.setSpace(index, builderForValue);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
               */
              public Builder addSpace(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space value) {
                copyOnWrite();
                instance.addSpace(value);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
               */
              public Builder addSpace(
                  int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space value) {
                copyOnWrite();
                instance.addSpace(index, value);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
               */
              public Builder addSpace(
                  fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space.Builder builderForValue) {
                copyOnWrite();
                instance.addSpace(builderForValue);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
               */
              public Builder addSpace(
                  int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space.Builder builderForValue) {
                copyOnWrite();
                instance.addSpace(index, builderForValue);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
               */
              public Builder addAllSpace(
                  Iterable<? extends Space> values) {
                copyOnWrite();
                instance.addAllSpace(values);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
               */
              public Builder clearSpace() {
                copyOnWrite();
                instance.clearSpace();
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Space space = 1;</code>
               */
              public Builder removeSpace(int index) {
                copyOnWrite();
                instance.removeSpace(index);
                return this;
              }

              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
               */
              public java.util.List<Time> getTimeList() {
                return java.util.Collections.unmodifiableList(
                    instance.getTimeList());
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
               */
              public int getTimeCount() {
                return instance.getTimeCount();
              }/**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
               */
              public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time getTime(int index) {
                return instance.getTime(index);
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
               */
              public Builder setTime(
                  int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time value) {
                copyOnWrite();
                instance.setTime(index, value);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
               */
              public Builder setTime(
                  int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time.Builder builderForValue) {
                copyOnWrite();
                instance.setTime(index, builderForValue);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
               */
              public Builder addTime(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time value) {
                copyOnWrite();
                instance.addTime(value);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
               */
              public Builder addTime(
                  int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time value) {
                copyOnWrite();
                instance.addTime(index, value);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
               */
              public Builder addTime(
                  fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time.Builder builderForValue) {
                copyOnWrite();
                instance.addTime(builderForValue);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
               */
              public Builder addTime(
                  int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time.Builder builderForValue) {
                copyOnWrite();
                instance.addTime(index, builderForValue);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
               */
              public Builder addAllTime(
                  Iterable<? extends Time> values) {
                copyOnWrite();
                instance.addAllTime(values);
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
               */
              public Builder clearTime() {
                copyOnWrite();
                instance.clearTime();
                return this;
              }
              /**
               * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context.Time time = 2;</code>
               */
              public Builder removeTime(int index) {
                copyOnWrite();
                instance.removeTime(index);
                return this;
              }

              // @@protoc_insertion_point(builder_scope:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context)
            }
            private byte memoizedIsInitialized = -1;
            protected final Object dynamicMethod(
                MethodToInvoke method,
                Object arg0, Object arg1) {
              switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                  return new fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context();
                }
                case IS_INITIALIZED: {
                  byte isInitialized = memoizedIsInitialized;
                  if (isInitialized == 1) return DEFAULT_INSTANCE;
                  if (isInitialized == 0) return null;

                  boolean shouldMemoize = ((Boolean) arg0).booleanValue();
                  for (int i = 0; i < getSpaceCount(); i++) {
                    if (!getSpace(i).isInitialized()) {
                      if (shouldMemoize) {
                        memoizedIsInitialized = 0;
                      }
                      return null;
                    }
                  }
                  for (int i = 0; i < getTimeCount(); i++) {
                    if (!getTime(i).isInitialized()) {
                      if (shouldMemoize) {
                        memoizedIsInitialized = 0;
                      }
                      return null;
                    }
                  }
                  if (shouldMemoize) memoizedIsInitialized = 1;
                  return DEFAULT_INSTANCE;

                }
                case MAKE_IMMUTABLE: {
                  space_.makeImmutable();
                  time_.makeImmutable();
                  return null;
                }
                case NEW_BUILDER: {
                  return new Builder();
                }
                case VISIT: {
                  Visitor visitor = (Visitor) arg0;
                  fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context other = (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context) arg1;
                  space_= visitor.visitList(space_, other.space_);
                  time_= visitor.visitList(time_, other.time_);
                  if (visitor == MergeFromVisitor
                      .INSTANCE) {
                  }
                  return this;
                }
                case MERGE_FROM_STREAM: {
                  com.google.protobuf.CodedInputStream input =
                      (com.google.protobuf.CodedInputStream) arg0;
                  com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                      (com.google.protobuf.ExtensionRegistryLite) arg1;
                  try {
                    boolean done = false;
                    while (!done) {
                      int tag = input.readTag();
                      switch (tag) {
                        case 0:
                          done = true;
                          break;
                        default: {
                          if (!parseUnknownField(tag, input)) {
                            done = true;
                          }
                          break;
                        }
                        case 10: {
                          if (!space_.isModifiable()) {
                            space_ =
                                com.google.protobuf.GeneratedMessageLite.mutableCopy(space_);
                          }
                          space_.add(
                              input.readMessage(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Space.parser(), extensionRegistry));
                          break;
                        }
                        case 18: {
                          if (!time_.isModifiable()) {
                            time_ =
                                com.google.protobuf.GeneratedMessageLite.mutableCopy(time_);
                          }
                          time_.add(
                              input.readMessage(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Time.parser(), extensionRegistry));
                          break;
                        }
                      }
                    }
                  } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw new RuntimeException(e.setUnfinishedMessage(this));
                  } catch (java.io.IOException e) {
                    throw new RuntimeException(
                        new com.google.protobuf.InvalidProtocolBufferException(
                            e.getMessage()).setUnfinishedMessage(this));
                  } finally {
                  }
                }
                case GET_DEFAULT_INSTANCE: {
                  return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                  if (PARSER == null) {    synchronized (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.class) {
                      if (PARSER == null) {
                        PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                      }
                    }
                  }
                  return PARSER;
                }
              }
              throw new UnsupportedOperationException();
            }


            // @@protoc_insertion_point(class_scope:tutorial.PilotPolicy.PilotRule.DCR.Condition.Context)
            private static final fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context DEFAULT_INSTANCE;
            static {
              DEFAULT_INSTANCE = new Context();
              DEFAULT_INSTANCE.makeImmutable();
            }

            public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context getDefaultInstance() {
              return DEFAULT_INSTANCE;
            }

            private static volatile com.google.protobuf.Parser<Context> PARSER;

            public static com.google.protobuf.Parser<Context> parser() {
              return DEFAULT_INSTANCE.getParserForType();
            }
          }

          public static final int CONTEXT_FIELD_NUMBER = 1;
          private com.google.protobuf.Internal.ProtobufList<Context> context_;
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          public java.util.List<Context> getContextList() {
            return context_;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          public java.util.List<? extends ContextOrBuilder>
              getContextOrBuilderList() {
            return context_;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          public int getContextCount() {
            return context_.size();
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context getContext(int index) {
            return context_.get(index);
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.ContextOrBuilder getContextOrBuilder(
              int index) {
            return context_.get(index);
          }
          private void ensureContextIsMutable() {
            if (!context_.isModifiable()) {
              context_ =
                  com.google.protobuf.GeneratedMessageLite.mutableCopy(context_);
             }
          }

          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          private void setContext(
              int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureContextIsMutable();
            context_.set(index, value);
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          private void setContext(
              int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Builder builderForValue) {
            ensureContextIsMutable();
            context_.set(index, builderForValue.build());
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          private void addContext(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureContextIsMutable();
            context_.add(value);
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          private void addContext(
              int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureContextIsMutable();
            context_.add(index, value);
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          private void addContext(
              fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Builder builderForValue) {
            ensureContextIsMutable();
            context_.add(builderForValue.build());
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          private void addContext(
              int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Builder builderForValue) {
            ensureContextIsMutable();
            context_.add(index, builderForValue.build());
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          private void addAllContext(
              Iterable<? extends Context> values) {
            ensureContextIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                values, context_);
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          private void clearContext() {
            context_ = emptyProtobufList();
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
           */
          private void removeContext(int index) {
            ensureContextIsMutable();
            context_.remove(index);
          }

          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            for (int i = 0; i < context_.size(); i++) {
              output.writeMessage(1, context_.get(i));
            }
            unknownFields.writeTo(output);
          }

          public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < context_.size(); i++) {
              size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(1, context_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
          }

          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
          }

          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }

          /**
           * Protobuf type {@code tutorial.PilotPolicy.PilotRule.DCR.Condition}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageLite.Builder<
                Condition, Builder> implements
              // @@protoc_insertion_point(builder_implements:tutorial.PilotPolicy.PilotRule.DCR.Condition)
              fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.ConditionOrBuilder {
            // Construct using fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.newBuilder()
            private Builder() {
              super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
             */
            public java.util.List<Context> getContextList() {
              return java.util.Collections.unmodifiableList(
                  instance.getContextList());
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
             */
            public int getContextCount() {
              return instance.getContextCount();
            }/**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
             */
            public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context getContext(int index) {
              return instance.getContext(index);
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
             */
            public Builder setContext(
                int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context value) {
              copyOnWrite();
              instance.setContext(index, value);
              return this;
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
             */
            public Builder setContext(
                int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Builder builderForValue) {
              copyOnWrite();
              instance.setContext(index, builderForValue);
              return this;
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
             */
            public Builder addContext(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context value) {
              copyOnWrite();
              instance.addContext(value);
              return this;
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
             */
            public Builder addContext(
                int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context value) {
              copyOnWrite();
              instance.addContext(index, value);
              return this;
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
             */
            public Builder addContext(
                fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Builder builderForValue) {
              copyOnWrite();
              instance.addContext(builderForValue);
              return this;
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
             */
            public Builder addContext(
                int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.Builder builderForValue) {
              copyOnWrite();
              instance.addContext(index, builderForValue);
              return this;
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
             */
            public Builder addAllContext(
                Iterable<? extends Context> values) {
              copyOnWrite();
              instance.addAllContext(values);
              return this;
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
             */
            public Builder clearContext() {
              copyOnWrite();
              instance.clearContext();
              return this;
            }
            /**
             * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition.Context context = 1;</code>
             */
            public Builder removeContext(int index) {
              copyOnWrite();
              instance.removeContext(index);
              return this;
            }

            // @@protoc_insertion_point(builder_scope:tutorial.PilotPolicy.PilotRule.DCR.Condition)
          }
          private byte memoizedIsInitialized = -1;
          protected final Object dynamicMethod(
              MethodToInvoke method,
              Object arg0, Object arg1) {
            switch (method) {
              case NEW_MUTABLE_INSTANCE: {
                return new fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition();
              }
              case IS_INITIALIZED: {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return DEFAULT_INSTANCE;
                if (isInitialized == 0) return null;

                boolean shouldMemoize = ((Boolean) arg0).booleanValue();
                for (int i = 0; i < getContextCount(); i++) {
                  if (!getContext(i).isInitialized()) {
                    if (shouldMemoize) {
                      memoizedIsInitialized = 0;
                    }
                    return null;
                  }
                }
                if (shouldMemoize) memoizedIsInitialized = 1;
                return DEFAULT_INSTANCE;

              }
              case MAKE_IMMUTABLE: {
                context_.makeImmutable();
                return null;
              }
              case NEW_BUILDER: {
                return new Builder();
              }
              case VISIT: {
                Visitor visitor = (Visitor) arg0;
                fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition other = (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition) arg1;
                context_= visitor.visitList(context_, other.context_);
                if (visitor == MergeFromVisitor
                    .INSTANCE) {
                }
                return this;
              }
              case MERGE_FROM_STREAM: {
                com.google.protobuf.CodedInputStream input =
                    (com.google.protobuf.CodedInputStream) arg0;
                com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                    (com.google.protobuf.ExtensionRegistryLite) arg1;
                try {
                  boolean done = false;
                  while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                      case 0:
                        done = true;
                        break;
                      default: {
                        if (!parseUnknownField(tag, input)) {
                          done = true;
                        }
                        break;
                      }
                      case 10: {
                        if (!context_.isModifiable()) {
                          context_ =
                              com.google.protobuf.GeneratedMessageLite.mutableCopy(context_);
                        }
                        context_.add(
                            input.readMessage(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Context.parser(), extensionRegistry));
                        break;
                      }
                    }
                  }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                  throw new RuntimeException(e.setUnfinishedMessage(this));
                } catch (java.io.IOException e) {
                  throw new RuntimeException(
                      new com.google.protobuf.InvalidProtocolBufferException(
                          e.getMessage()).setUnfinishedMessage(this));
                } finally {
                }
              }
              case GET_DEFAULT_INSTANCE: {
                return DEFAULT_INSTANCE;
              }
              case GET_PARSER: {
                if (PARSER == null) {    synchronized (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.class) {
                    if (PARSER == null) {
                      PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                    }
                  }
                }
                return PARSER;
              }
            }
            throw new UnsupportedOperationException();
          }


          // @@protoc_insertion_point(class_scope:tutorial.PilotPolicy.PilotRule.DCR.Condition)
          private static final fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new Condition();
            DEFAULT_INSTANCE.makeImmutable();
          }

          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static volatile com.google.protobuf.Parser<Condition> PARSER;

          public static com.google.protobuf.Parser<Condition> parser() {
            return DEFAULT_INSTANCE.getParserForType();
          }
        }

        public interface DUROrBuilder extends
            // @@protoc_insertion_point(interface_extends:tutorial.PilotPolicy.PilotRule.DCR.DUR)
            com.google.protobuf.MessageLiteOrBuilder {

          /**
           * <code>required string purpose = 1;</code>
           */
          boolean hasPurpose();
          /**
           * <code>required string purpose = 1;</code>
           */
          String getPurpose();
          /**
           * <code>required string purpose = 1;</code>
           */
          com.google.protobuf.ByteString
              getPurposeBytes();

          /**
           * <code>required int32 retention_time = 2;</code>
           */
          boolean hasRetentionTime();
          /**
           * <code>required int32 retention_time = 2;</code>
           */
          int getRetentionTime();
        }
        /**
         * Protobuf type {@code tutorial.PilotPolicy.PilotRule.DCR.DUR}
         */
        public  static final class DUR extends
            com.google.protobuf.GeneratedMessageLite<
                DUR, DUR.Builder> implements
            // @@protoc_insertion_point(message_implements:tutorial.PilotPolicy.PilotRule.DCR.DUR)
            DUROrBuilder {
          private DUR() {
            purpose_ = "";
          }
          private int bitField0_;
          public static final int PURPOSE_FIELD_NUMBER = 1;
          private String purpose_;
          /**
           * <code>required string purpose = 1;</code>
           */
          public boolean hasPurpose() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>required string purpose = 1;</code>
           */
          public String getPurpose() {
            return purpose_;
          }
          /**
           * <code>required string purpose = 1;</code>
           */
          public com.google.protobuf.ByteString
              getPurposeBytes() {
            return com.google.protobuf.ByteString.copyFromUtf8(purpose_);
          }
          /**
           * <code>required string purpose = 1;</code>
           */
          private void setPurpose(
              String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            purpose_ = value;
          }
          /**
           * <code>required string purpose = 1;</code>
           */
          private void clearPurpose() {
            bitField0_ = (bitField0_ & ~0x00000001);
            purpose_ = getDefaultInstance().getPurpose();
          }
          /**
           * <code>required string purpose = 1;</code>
           */
          private void setPurposeBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            purpose_ = value.toStringUtf8();
          }

          public static final int RETENTION_TIME_FIELD_NUMBER = 2;
          private int retentionTime_;
          /**
           * <code>required int32 retention_time = 2;</code>
           */
          public boolean hasRetentionTime() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>required int32 retention_time = 2;</code>
           */
          public int getRetentionTime() {
            return retentionTime_;
          }
          /**
           * <code>required int32 retention_time = 2;</code>
           */
          private void setRetentionTime(int value) {
            bitField0_ |= 0x00000002;
            retentionTime_ = value;
          }
          /**
           * <code>required int32 retention_time = 2;</code>
           */
          private void clearRetentionTime() {
            bitField0_ = (bitField0_ & ~0x00000002);
            retentionTime_ = 0;
          }

          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              output.writeString(1, getPurpose());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              output.writeInt32(2, retentionTime_);
            }
            unknownFields.writeTo(output);
          }

          public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              size += com.google.protobuf.CodedOutputStream
                .computeStringSize(1, getPurpose());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, retentionTime_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSerializedSize = size;
            return size;
          }

          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, data, extensionRegistry);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input);
          }
          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                DEFAULT_INSTANCE, input, extensionRegistry);
          }

          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }

          /**
           * Protobuf type {@code tutorial.PilotPolicy.PilotRule.DCR.DUR}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageLite.Builder<
                DUR, Builder> implements
              // @@protoc_insertion_point(builder_implements:tutorial.PilotPolicy.PilotRule.DCR.DUR)
              fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUROrBuilder {
            // Construct using fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR.newBuilder()
            private Builder() {
              super(DEFAULT_INSTANCE);
            }


            /**
             * <code>required string purpose = 1;</code>
             */
            public boolean hasPurpose() {
              return instance.hasPurpose();
            }
            /**
             * <code>required string purpose = 1;</code>
             */
            public String getPurpose() {
              return instance.getPurpose();
            }
            /**
             * <code>required string purpose = 1;</code>
             */
            public com.google.protobuf.ByteString
                getPurposeBytes() {
              return instance.getPurposeBytes();
            }
            /**
             * <code>required string purpose = 1;</code>
             */
            public Builder setPurpose(
                String value) {
              copyOnWrite();
              instance.setPurpose(value);
              return this;
            }
            /**
             * <code>required string purpose = 1;</code>
             */
            public Builder clearPurpose() {
              copyOnWrite();
              instance.clearPurpose();
              return this;
            }
            /**
             * <code>required string purpose = 1;</code>
             */
            public Builder setPurposeBytes(
                com.google.protobuf.ByteString value) {
              copyOnWrite();
              instance.setPurposeBytes(value);
              return this;
            }

            /**
             * <code>required int32 retention_time = 2;</code>
             */
            public boolean hasRetentionTime() {
              return instance.hasRetentionTime();
            }
            /**
             * <code>required int32 retention_time = 2;</code>
             */
            public int getRetentionTime() {
              return instance.getRetentionTime();
            }
            /**
             * <code>required int32 retention_time = 2;</code>
             */
            public Builder setRetentionTime(int value) {
              copyOnWrite();
              instance.setRetentionTime(value);
              return this;
            }
            /**
             * <code>required int32 retention_time = 2;</code>
             */
            public Builder clearRetentionTime() {
              copyOnWrite();
              instance.clearRetentionTime();
              return this;
            }

            // @@protoc_insertion_point(builder_scope:tutorial.PilotPolicy.PilotRule.DCR.DUR)
          }
          private byte memoizedIsInitialized = -1;
          protected final Object dynamicMethod(
              MethodToInvoke method,
              Object arg0, Object arg1) {
            switch (method) {
              case NEW_MUTABLE_INSTANCE: {
                return new fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR();
              }
              case IS_INITIALIZED: {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return DEFAULT_INSTANCE;
                if (isInitialized == 0) return null;

                boolean shouldMemoize = ((Boolean) arg0).booleanValue();
                if (!hasPurpose()) {
                  if (shouldMemoize) {
                    memoizedIsInitialized = 0;
                  }
                  return null;
                }
                if (!hasRetentionTime()) {
                  if (shouldMemoize) {
                    memoizedIsInitialized = 0;
                  }
                  return null;
                }
                if (shouldMemoize) memoizedIsInitialized = 1;
                return DEFAULT_INSTANCE;

              }
              case MAKE_IMMUTABLE: {
                return null;
              }
              case NEW_BUILDER: {
                return new Builder();
              }
              case VISIT: {
                Visitor visitor = (Visitor) arg0;
                fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR other = (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR) arg1;
                purpose_ = visitor.visitString(
                    hasPurpose(), purpose_,
                    other.hasPurpose(), other.purpose_);
                retentionTime_ = visitor.visitInt(
                    hasRetentionTime(), retentionTime_,
                    other.hasRetentionTime(), other.retentionTime_);
                if (visitor == MergeFromVisitor
                    .INSTANCE) {
                  bitField0_ |= other.bitField0_;
                }
                return this;
              }
              case MERGE_FROM_STREAM: {
                com.google.protobuf.CodedInputStream input =
                    (com.google.protobuf.CodedInputStream) arg0;
                com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                    (com.google.protobuf.ExtensionRegistryLite) arg1;
                try {
                  boolean done = false;
                  while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                      case 0:
                        done = true;
                        break;
                      default: {
                        if (!parseUnknownField(tag, input)) {
                          done = true;
                        }
                        break;
                      }
                      case 10: {
                        String s = input.readString();
                        bitField0_ |= 0x00000001;
                        purpose_ = s;
                        break;
                      }
                      case 16: {
                        bitField0_ |= 0x00000002;
                        retentionTime_ = input.readInt32();
                        break;
                      }
                    }
                  }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                  throw new RuntimeException(e.setUnfinishedMessage(this));
                } catch (java.io.IOException e) {
                  throw new RuntimeException(
                      new com.google.protobuf.InvalidProtocolBufferException(
                          e.getMessage()).setUnfinishedMessage(this));
                } finally {
                }
              }
              case GET_DEFAULT_INSTANCE: {
                return DEFAULT_INSTANCE;
              }
              case GET_PARSER: {
                if (PARSER == null) {    synchronized (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR.class) {
                    if (PARSER == null) {
                      PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                    }
                  }
                }
                return PARSER;
              }
            }
            throw new UnsupportedOperationException();
          }


          // @@protoc_insertion_point(class_scope:tutorial.PilotPolicy.PilotRule.DCR.DUR)
          private static final fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new DUR();
            DEFAULT_INSTANCE.makeImmutable();
          }

          public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static volatile com.google.protobuf.Parser<DUR> PARSER;

          public static com.google.protobuf.Parser<DUR> parser() {
            return DEFAULT_INSTANCE.getParserForType();
          }
        }

        private int bitField0_;
        public static final int CONDITION_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<Condition> condition_;
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        public java.util.List<Condition> getConditionList() {
          return condition_;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        public java.util.List<? extends ConditionOrBuilder>
            getConditionOrBuilderList() {
          return condition_;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        public int getConditionCount() {
          return condition_.size();
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition getCondition(int index) {
          return condition_.get(index);
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.ConditionOrBuilder getConditionOrBuilder(
            int index) {
          return condition_.get(index);
        }
        private void ensureConditionIsMutable() {
          if (!condition_.isModifiable()) {
            condition_ =
                com.google.protobuf.GeneratedMessageLite.mutableCopy(condition_);
           }
        }

        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        private void setCondition(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConditionIsMutable();
          condition_.set(index, value);
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        private void setCondition(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Builder builderForValue) {
          ensureConditionIsMutable();
          condition_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        private void addCondition(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConditionIsMutable();
          condition_.add(value);
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        private void addCondition(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConditionIsMutable();
          condition_.add(index, value);
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        private void addCondition(
            fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Builder builderForValue) {
          ensureConditionIsMutable();
          condition_.add(builderForValue.build());
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        private void addCondition(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Builder builderForValue) {
          ensureConditionIsMutable();
          condition_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        private void addAllCondition(
            Iterable<? extends Condition> values) {
          ensureConditionIsMutable();
          com.google.protobuf.AbstractMessageLite.addAll(
              values, condition_);
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        private void clearCondition() {
          condition_ = emptyProtobufList();
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
         */
        private void removeCondition(int index) {
          ensureConditionIsMutable();
          condition_.remove(index);
        }

        public static final int ENTITY_FIELD_NUMBER = 2;
        private String entity_;
        /**
         * <code>required string entity = 2;</code>
         */
        public boolean hasEntity() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string entity = 2;</code>
         */
        public String getEntity() {
          return entity_;
        }
        /**
         * <code>required string entity = 2;</code>
         */
        public com.google.protobuf.ByteString
            getEntityBytes() {
          return com.google.protobuf.ByteString.copyFromUtf8(entity_);
        }
        /**
         * <code>required string entity = 2;</code>
         */
        private void setEntity(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          entity_ = value;
        }
        /**
         * <code>required string entity = 2;</code>
         */
        private void clearEntity() {
          bitField0_ = (bitField0_ & ~0x00000001);
          entity_ = getDefaultInstance().getEntity();
        }
        /**
         * <code>required string entity = 2;</code>
         */
        private void setEntityBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          entity_ = value.toStringUtf8();
        }

        public static final int DUR_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.ProtobufList<DUR> dur_;
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        public java.util.List<DUR> getDurList() {
          return dur_;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        public java.util.List<? extends DUROrBuilder>
            getDurOrBuilderList() {
          return dur_;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        public int getDurCount() {
          return dur_.size();
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR getDur(int index) {
          return dur_.get(index);
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUROrBuilder getDurOrBuilder(
            int index) {
          return dur_.get(index);
        }
        private void ensureDurIsMutable() {
          if (!dur_.isModifiable()) {
            dur_ =
                com.google.protobuf.GeneratedMessageLite.mutableCopy(dur_);
           }
        }

        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        private void setDur(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDurIsMutable();
          dur_.set(index, value);
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        private void setDur(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR.Builder builderForValue) {
          ensureDurIsMutable();
          dur_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        private void addDur(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDurIsMutable();
          dur_.add(value);
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        private void addDur(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDurIsMutable();
          dur_.add(index, value);
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        private void addDur(
            fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR.Builder builderForValue) {
          ensureDurIsMutable();
          dur_.add(builderForValue.build());
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        private void addDur(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR.Builder builderForValue) {
          ensureDurIsMutable();
          dur_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        private void addAllDur(
            Iterable<? extends DUR> values) {
          ensureDurIsMutable();
          com.google.protobuf.AbstractMessageLite.addAll(
              values, dur_);
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        private void clearDur() {
          dur_ = emptyProtobufList();
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
         */
        private void removeDur(int index) {
          ensureDurIsMutable();
          dur_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          for (int i = 0; i < condition_.size(); i++) {
            output.writeMessage(1, condition_.get(i));
          }
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeString(2, getEntity());
          }
          for (int i = 0; i < dur_.size(); i++) {
            output.writeMessage(3, dur_.get(i));
          }
          unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          for (int i = 0; i < condition_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, condition_.get(i));
          }
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(2, getEntity());
          }
          for (int i = 0; i < dur_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, dur_.get(i));
          }
          size += unknownFields.getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
        }
        public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data);
        }
        public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
        }
        public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input);
        }
        public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageLite.parseFrom(
              DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * Protobuf type {@code tutorial.PilotPolicy.PilotRule.DCR}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              DCR, Builder> implements
            // @@protoc_insertion_point(builder_implements:tutorial.PilotPolicy.PilotRule.DCR)
            fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCROrBuilder {
          // Construct using fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.newBuilder()
          private Builder() {
            super(DEFAULT_INSTANCE);
          }


          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
           */
          public java.util.List<Condition> getConditionList() {
            return java.util.Collections.unmodifiableList(
                instance.getConditionList());
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
           */
          public int getConditionCount() {
            return instance.getConditionCount();
          }/**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
           */
          public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition getCondition(int index) {
            return instance.getCondition(index);
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
           */
          public Builder setCondition(
              int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition value) {
            copyOnWrite();
            instance.setCondition(index, value);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
           */
          public Builder setCondition(
              int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Builder builderForValue) {
            copyOnWrite();
            instance.setCondition(index, builderForValue);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
           */
          public Builder addCondition(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition value) {
            copyOnWrite();
            instance.addCondition(value);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
           */
          public Builder addCondition(
              int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition value) {
            copyOnWrite();
            instance.addCondition(index, value);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
           */
          public Builder addCondition(
              fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Builder builderForValue) {
            copyOnWrite();
            instance.addCondition(builderForValue);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
           */
          public Builder addCondition(
              int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.Builder builderForValue) {
            copyOnWrite();
            instance.addCondition(index, builderForValue);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
           */
          public Builder addAllCondition(
              Iterable<? extends Condition> values) {
            copyOnWrite();
            instance.addAllCondition(values);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
           */
          public Builder clearCondition() {
            copyOnWrite();
            instance.clearCondition();
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.Condition condition = 1;</code>
           */
          public Builder removeCondition(int index) {
            copyOnWrite();
            instance.removeCondition(index);
            return this;
          }

          /**
           * <code>required string entity = 2;</code>
           */
          public boolean hasEntity() {
            return instance.hasEntity();
          }
          /**
           * <code>required string entity = 2;</code>
           */
          public String getEntity() {
            return instance.getEntity();
          }
          /**
           * <code>required string entity = 2;</code>
           */
          public com.google.protobuf.ByteString
              getEntityBytes() {
            return instance.getEntityBytes();
          }
          /**
           * <code>required string entity = 2;</code>
           */
          public Builder setEntity(
              String value) {
            copyOnWrite();
            instance.setEntity(value);
            return this;
          }
          /**
           * <code>required string entity = 2;</code>
           */
          public Builder clearEntity() {
            copyOnWrite();
            instance.clearEntity();
            return this;
          }
          /**
           * <code>required string entity = 2;</code>
           */
          public Builder setEntityBytes(
              com.google.protobuf.ByteString value) {
            copyOnWrite();
            instance.setEntityBytes(value);
            return this;
          }

          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
           */
          public java.util.List<DUR> getDurList() {
            return java.util.Collections.unmodifiableList(
                instance.getDurList());
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
           */
          public int getDurCount() {
            return instance.getDurCount();
          }/**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
           */
          public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR getDur(int index) {
            return instance.getDur(index);
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
           */
          public Builder setDur(
              int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR value) {
            copyOnWrite();
            instance.setDur(index, value);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
           */
          public Builder setDur(
              int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR.Builder builderForValue) {
            copyOnWrite();
            instance.setDur(index, builderForValue);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
           */
          public Builder addDur(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR value) {
            copyOnWrite();
            instance.addDur(value);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
           */
          public Builder addDur(
              int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR value) {
            copyOnWrite();
            instance.addDur(index, value);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
           */
          public Builder addDur(
              fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR.Builder builderForValue) {
            copyOnWrite();
            instance.addDur(builderForValue);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
           */
          public Builder addDur(
              int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR.Builder builderForValue) {
            copyOnWrite();
            instance.addDur(index, builderForValue);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
           */
          public Builder addAllDur(
              Iterable<? extends DUR> values) {
            copyOnWrite();
            instance.addAllDur(values);
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
           */
          public Builder clearDur() {
            copyOnWrite();
            instance.clearDur();
            return this;
          }
          /**
           * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR.DUR dur = 3;</code>
           */
          public Builder removeDur(int index) {
            copyOnWrite();
            instance.removeDur(index);
            return this;
          }

          // @@protoc_insertion_point(builder_scope:tutorial.PilotPolicy.PilotRule.DCR)
        }
        private byte memoizedIsInitialized = -1;
        protected final Object dynamicMethod(
            MethodToInvoke method,
            Object arg0, Object arg1) {
          switch (method) {
            case NEW_MUTABLE_INSTANCE: {
              return new fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR();
            }
            case IS_INITIALIZED: {
              byte isInitialized = memoizedIsInitialized;
              if (isInitialized == 1) return DEFAULT_INSTANCE;
              if (isInitialized == 0) return null;

              boolean shouldMemoize = ((Boolean) arg0).booleanValue();
              if (!hasEntity()) {
                if (shouldMemoize) {
                  memoizedIsInitialized = 0;
                }
                return null;
              }
              for (int i = 0; i < getConditionCount(); i++) {
                if (!getCondition(i).isInitialized()) {
                  if (shouldMemoize) {
                    memoizedIsInitialized = 0;
                  }
                  return null;
                }
              }
              for (int i = 0; i < getDurCount(); i++) {
                if (!getDur(i).isInitialized()) {
                  if (shouldMemoize) {
                    memoizedIsInitialized = 0;
                  }
                  return null;
                }
              }
              if (shouldMemoize) memoizedIsInitialized = 1;
              return DEFAULT_INSTANCE;

            }
            case MAKE_IMMUTABLE: {
              condition_.makeImmutable();
              dur_.makeImmutable();
              return null;
            }
            case NEW_BUILDER: {
              return new Builder();
            }
            case VISIT: {
              Visitor visitor = (Visitor) arg0;
              fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR other = (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR) arg1;
              condition_= visitor.visitList(condition_, other.condition_);
              entity_ = visitor.visitString(
                  hasEntity(), entity_,
                  other.hasEntity(), other.entity_);
              dur_= visitor.visitList(dur_, other.dur_);
              if (visitor == MergeFromVisitor
                  .INSTANCE) {
                bitField0_ |= other.bitField0_;
              }
              return this;
            }
            case MERGE_FROM_STREAM: {
              com.google.protobuf.CodedInputStream input =
                  (com.google.protobuf.CodedInputStream) arg0;
              com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                  (com.google.protobuf.ExtensionRegistryLite) arg1;
              try {
                boolean done = false;
                while (!done) {
                  int tag = input.readTag();
                  switch (tag) {
                    case 0:
                      done = true;
                      break;
                    default: {
                      if (!parseUnknownField(tag, input)) {
                        done = true;
                      }
                      break;
                    }
                    case 10: {
                      if (!condition_.isModifiable()) {
                        condition_ =
                            com.google.protobuf.GeneratedMessageLite.mutableCopy(condition_);
                      }
                      condition_.add(
                          input.readMessage(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Condition.parser(), extensionRegistry));
                      break;
                    }
                    case 18: {
                      String s = input.readString();
                      bitField0_ |= 0x00000001;
                      entity_ = s;
                      break;
                    }
                    case 26: {
                      if (!dur_.isModifiable()) {
                        dur_ =
                            com.google.protobuf.GeneratedMessageLite.mutableCopy(dur_);
                      }
                      dur_.add(
                          input.readMessage(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.DUR.parser(), extensionRegistry));
                      break;
                    }
                  }
                }
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw new RuntimeException(e.setUnfinishedMessage(this));
              } catch (java.io.IOException e) {
                throw new RuntimeException(
                    new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this));
              } finally {
              }
            }
            case GET_DEFAULT_INSTANCE: {
              return DEFAULT_INSTANCE;
            }
            case GET_PARSER: {
              if (PARSER == null) {    synchronized (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.class) {
                  if (PARSER == null) {
                    PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  }
                }
              }
              return PARSER;
            }
          }
          throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:tutorial.PilotPolicy.PilotRule.DCR)
        private static final fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new DCR();
          DEFAULT_INSTANCE.makeImmutable();
        }

        public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<DCR> PARSER;

        public static com.google.protobuf.Parser<DCR> parser() {
          return DEFAULT_INSTANCE.getParserForType();
        }
      }

      private int bitField0_;
      public static final int DATATYPE_FIELD_NUMBER = 1;
      private String datatype_;
      /**
       * <code>required string datatype = 1;</code>
       */
      public boolean hasDatatype() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string datatype = 1;</code>
       */
      public String getDatatype() {
        return datatype_;
      }
      /**
       * <code>required string datatype = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDatatypeBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(datatype_);
      }
      /**
       * <code>required string datatype = 1;</code>
       */
      private void setDatatype(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        datatype_ = value;
      }
      /**
       * <code>required string datatype = 1;</code>
       */
      private void clearDatatype() {
        bitField0_ = (bitField0_ & ~0x00000001);
        datatype_ = getDefaultInstance().getDatatype();
      }
      /**
       * <code>required string datatype = 1;</code>
       */
      private void setDatatypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        datatype_ = value.toStringUtf8();
      }

      public static final int DCR_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.ProtobufList<DCR> dcr_;
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      public java.util.List<DCR> getDcrList() {
        return dcr_;
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      public java.util.List<? extends DCROrBuilder>
          getDcrOrBuilderList() {
        return dcr_;
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      public int getDcrCount() {
        return dcr_.size();
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR getDcr(int index) {
        return dcr_.get(index);
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCROrBuilder getDcrOrBuilder(
          int index) {
        return dcr_.get(index);
      }
      private void ensureDcrIsMutable() {
        if (!dcr_.isModifiable()) {
          dcr_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(dcr_);
         }
      }

      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      private void setDcr(
          int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDcrIsMutable();
        dcr_.set(index, value);
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      private void setDcr(
          int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Builder builderForValue) {
        ensureDcrIsMutable();
        dcr_.set(index, builderForValue.build());
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      private void addDcr(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDcrIsMutable();
        dcr_.add(value);
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      private void addDcr(
          int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDcrIsMutable();
        dcr_.add(index, value);
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      private void addDcr(
          fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Builder builderForValue) {
        ensureDcrIsMutable();
        dcr_.add(builderForValue.build());
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      private void addDcr(
          int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Builder builderForValue) {
        ensureDcrIsMutable();
        dcr_.add(index, builderForValue.build());
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      private void addAllDcr(
          Iterable<? extends DCR> values) {
        ensureDcrIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, dcr_);
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      private void clearDcr() {
        dcr_ = emptyProtobufList();
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
       */
      private void removeDcr(int index) {
        ensureDcrIsMutable();
        dcr_.remove(index);
      }

      public static final int TR_FIELD_NUMBER = 3;
      private com.google.protobuf.Internal.ProtobufList<DCR> tr_;
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      public java.util.List<DCR> getTrList() {
        return tr_;
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      public java.util.List<? extends DCROrBuilder>
          getTrOrBuilderList() {
        return tr_;
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      public int getTrCount() {
        return tr_.size();
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR getTr(int index) {
        return tr_.get(index);
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCROrBuilder getTrOrBuilder(
          int index) {
        return tr_.get(index);
      }
      private void ensureTrIsMutable() {
        if (!tr_.isModifiable()) {
          tr_ =
              com.google.protobuf.GeneratedMessageLite.mutableCopy(tr_);
         }
      }

      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      private void setTr(
          int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTrIsMutable();
        tr_.set(index, value);
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      private void setTr(
          int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Builder builderForValue) {
        ensureTrIsMutable();
        tr_.set(index, builderForValue.build());
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      private void addTr(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTrIsMutable();
        tr_.add(value);
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      private void addTr(
          int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTrIsMutable();
        tr_.add(index, value);
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      private void addTr(
          fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Builder builderForValue) {
        ensureTrIsMutable();
        tr_.add(builderForValue.build());
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      private void addTr(
          int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Builder builderForValue) {
        ensureTrIsMutable();
        tr_.add(index, builderForValue.build());
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      private void addAllTr(
          Iterable<? extends DCR> values) {
        ensureTrIsMutable();
        com.google.protobuf.AbstractMessageLite.addAll(
            values, tr_);
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      private void clearTr() {
        tr_ = emptyProtobufList();
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
       */
      private void removeTr(int index) {
        ensureTrIsMutable();
        tr_.remove(index);
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeString(1, getDatatype());
        }
        for (int i = 0; i < dcr_.size(); i++) {
          output.writeMessage(2, dcr_.get(i));
        }
        for (int i = 0; i < tr_.size(); i++) {
          output.writeMessage(3, tr_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getDatatype());
        }
        for (int i = 0; i < dcr_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, dcr_.get(i));
        }
        for (int i = 0; i < tr_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, tr_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code tutorial.PilotPolicy.PilotRule}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            PilotRule, Builder> implements
          // @@protoc_insertion_point(builder_implements:tutorial.PilotPolicy.PilotRule)
          fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRuleOrBuilder {
        // Construct using fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required string datatype = 1;</code>
         */
        public boolean hasDatatype() {
          return instance.hasDatatype();
        }
        /**
         * <code>required string datatype = 1;</code>
         */
        public String getDatatype() {
          return instance.getDatatype();
        }
        /**
         * <code>required string datatype = 1;</code>
         */
        public com.google.protobuf.ByteString
            getDatatypeBytes() {
          return instance.getDatatypeBytes();
        }
        /**
         * <code>required string datatype = 1;</code>
         */
        public Builder setDatatype(
            String value) {
          copyOnWrite();
          instance.setDatatype(value);
          return this;
        }
        /**
         * <code>required string datatype = 1;</code>
         */
        public Builder clearDatatype() {
          copyOnWrite();
          instance.clearDatatype();
          return this;
        }
        /**
         * <code>required string datatype = 1;</code>
         */
        public Builder setDatatypeBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setDatatypeBytes(value);
          return this;
        }

        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
         */
        public java.util.List<DCR> getDcrList() {
          return java.util.Collections.unmodifiableList(
              instance.getDcrList());
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
         */
        public int getDcrCount() {
          return instance.getDcrCount();
        }/**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
         */
        public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR getDcr(int index) {
          return instance.getDcr(index);
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
         */
        public Builder setDcr(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR value) {
          copyOnWrite();
          instance.setDcr(index, value);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
         */
        public Builder setDcr(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Builder builderForValue) {
          copyOnWrite();
          instance.setDcr(index, builderForValue);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
         */
        public Builder addDcr(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR value) {
          copyOnWrite();
          instance.addDcr(value);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
         */
        public Builder addDcr(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR value) {
          copyOnWrite();
          instance.addDcr(index, value);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
         */
        public Builder addDcr(
            fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Builder builderForValue) {
          copyOnWrite();
          instance.addDcr(builderForValue);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
         */
        public Builder addDcr(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Builder builderForValue) {
          copyOnWrite();
          instance.addDcr(index, builderForValue);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
         */
        public Builder addAllDcr(
            Iterable<? extends DCR> values) {
          copyOnWrite();
          instance.addAllDcr(values);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
         */
        public Builder clearDcr() {
          copyOnWrite();
          instance.clearDcr();
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR dcr = 2;</code>
         */
        public Builder removeDcr(int index) {
          copyOnWrite();
          instance.removeDcr(index);
          return this;
        }

        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
         */
        public java.util.List<DCR> getTrList() {
          return java.util.Collections.unmodifiableList(
              instance.getTrList());
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
         */
        public int getTrCount() {
          return instance.getTrCount();
        }/**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
         */
        public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR getTr(int index) {
          return instance.getTr(index);
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
         */
        public Builder setTr(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR value) {
          copyOnWrite();
          instance.setTr(index, value);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
         */
        public Builder setTr(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Builder builderForValue) {
          copyOnWrite();
          instance.setTr(index, builderForValue);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
         */
        public Builder addTr(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR value) {
          copyOnWrite();
          instance.addTr(value);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
         */
        public Builder addTr(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR value) {
          copyOnWrite();
          instance.addTr(index, value);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
         */
        public Builder addTr(
            fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Builder builderForValue) {
          copyOnWrite();
          instance.addTr(builderForValue);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
         */
        public Builder addTr(
            int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.Builder builderForValue) {
          copyOnWrite();
          instance.addTr(index, builderForValue);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
         */
        public Builder addAllTr(
            Iterable<? extends DCR> values) {
          copyOnWrite();
          instance.addAllTr(values);
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
         */
        public Builder clearTr() {
          copyOnWrite();
          instance.clearTr();
          return this;
        }
        /**
         * <code>repeated .tutorial.PilotPolicy.PilotRule.DCR tr = 3;</code>
         */
        public Builder removeTr(int index) {
          copyOnWrite();
          instance.removeTr(index);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:tutorial.PilotPolicy.PilotRule)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasDatatype()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            for (int i = 0; i < getDcrCount(); i++) {
              if (!getDcr(i).isInitialized()) {
                if (shouldMemoize) {
                  memoizedIsInitialized = 0;
                }
                return null;
              }
            }
            for (int i = 0; i < getTrCount(); i++) {
              if (!getTr(i).isInitialized()) {
                if (shouldMemoize) {
                  memoizedIsInitialized = 0;
                }
                return null;
              }
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            dcr_.makeImmutable();
            tr_.makeImmutable();
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule other = (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule) arg1;
            datatype_ = visitor.visitString(
                hasDatatype(), datatype_,
                other.hasDatatype(), other.datatype_);
            dcr_= visitor.visitList(dcr_, other.dcr_);
            tr_= visitor.visitList(tr_, other.tr_);
            if (visitor == MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    String s = input.readString();
                    bitField0_ |= 0x00000001;
                    datatype_ = s;
                    break;
                  }
                  case 18: {
                    if (!dcr_.isModifiable()) {
                      dcr_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(dcr_);
                    }
                    dcr_.add(
                        input.readMessage(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.parser(), extensionRegistry));
                    break;
                  }
                  case 26: {
                    if (!tr_.isModifiable()) {
                      tr_ =
                          com.google.protobuf.GeneratedMessageLite.mutableCopy(tr_);
                    }
                    tr_.add(
                        input.readMessage(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.DCR.parser(), extensionRegistry));
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:tutorial.PilotPolicy.PilotRule)
      private static final fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new PilotRule();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<PilotRule> PARSER;

      public static com.google.protobuf.Parser<PilotRule> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int PILOTRULE_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<PilotRule> pilotRule_;
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    public java.util.List<PilotRule> getPilotRuleList() {
      return pilotRule_;
    }
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    public java.util.List<? extends PilotRuleOrBuilder>
        getPilotRuleOrBuilderList() {
      return pilotRule_;
    }
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    public int getPilotRuleCount() {
      return pilotRule_.size();
    }
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule getPilotRule(int index) {
      return pilotRule_.get(index);
    }
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRuleOrBuilder getPilotRuleOrBuilder(
        int index) {
      return pilotRule_.get(index);
    }
    private void ensurePilotRuleIsMutable() {
      if (!pilotRule_.isModifiable()) {
        pilotRule_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(pilotRule_);
       }
    }

    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    private void setPilotRule(
        int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePilotRuleIsMutable();
      pilotRule_.set(index, value);
    }
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    private void setPilotRule(
        int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.Builder builderForValue) {
      ensurePilotRuleIsMutable();
      pilotRule_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    private void addPilotRule(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePilotRuleIsMutable();
      pilotRule_.add(value);
    }
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    private void addPilotRule(
        int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePilotRuleIsMutable();
      pilotRule_.add(index, value);
    }
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    private void addPilotRule(
        fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.Builder builderForValue) {
      ensurePilotRuleIsMutable();
      pilotRule_.add(builderForValue.build());
    }
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    private void addPilotRule(
        int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.Builder builderForValue) {
      ensurePilotRuleIsMutable();
      pilotRule_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    private void addAllPilotRule(
        Iterable<? extends PilotRule> values) {
      ensurePilotRuleIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, pilotRule_);
    }
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    private void clearPilotRule() {
      pilotRule_ = emptyProtobufList();
    }
    /**
     * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
     */
    private void removePilotRule(int index) {
      ensurePilotRuleIsMutable();
      pilotRule_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < pilotRule_.size(); i++) {
        output.writeMessage(1, pilotRule_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < pilotRule_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, pilotRule_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * [START messages]
     * </pre>
     *
     * Protobuf type {@code tutorial.PilotPolicy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          PilotPolicy, Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.PilotPolicy)
        fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicyOrBuilder {
      // Construct using fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
       */
      public java.util.List<PilotRule> getPilotRuleList() {
        return java.util.Collections.unmodifiableList(
            instance.getPilotRuleList());
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
       */
      public int getPilotRuleCount() {
        return instance.getPilotRuleCount();
      }/**
       * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
       */
      public fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule getPilotRule(int index) {
        return instance.getPilotRule(index);
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
       */
      public Builder setPilotRule(
          int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule value) {
        copyOnWrite();
        instance.setPilotRule(index, value);
        return this;
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
       */
      public Builder setPilotRule(
          int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.Builder builderForValue) {
        copyOnWrite();
        instance.setPilotRule(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
       */
      public Builder addPilotRule(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule value) {
        copyOnWrite();
        instance.addPilotRule(value);
        return this;
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
       */
      public Builder addPilotRule(
          int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule value) {
        copyOnWrite();
        instance.addPilotRule(index, value);
        return this;
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
       */
      public Builder addPilotRule(
          fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.Builder builderForValue) {
        copyOnWrite();
        instance.addPilotRule(builderForValue);
        return this;
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
       */
      public Builder addPilotRule(
          int index, fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.Builder builderForValue) {
        copyOnWrite();
        instance.addPilotRule(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
       */
      public Builder addAllPilotRule(
          Iterable<? extends PilotRule> values) {
        copyOnWrite();
        instance.addAllPilotRule(values);
        return this;
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
       */
      public Builder clearPilotRule() {
        copyOnWrite();
        instance.clearPilotRule();
        return this;
      }
      /**
       * <code>repeated .tutorial.PilotPolicy.PilotRule pilotRule = 1;</code>
       */
      public Builder removePilotRule(int index) {
        copyOnWrite();
        instance.removePilotRule(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:tutorial.PilotPolicy)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getPilotRuleCount(); i++) {
            if (!getPilotRule(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          pilotRule_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy other = (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy) arg1;
          pilotRule_= visitor.visitList(pilotRule_, other.pilotRule_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!pilotRule_.isModifiable()) {
                    pilotRule_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(pilotRule_);
                  }
                  pilotRule_.add(
                      input.readMessage(fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.PilotRule.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:tutorial.PilotPolicy)
    private static final fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PilotPolicy();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static fr.citi_lab.victor_morel.coiot.PilotPolicyProto.PilotPolicy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PilotPolicy> PARSER;

    public static com.google.protobuf.Parser<PilotPolicy> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
